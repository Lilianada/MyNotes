rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all rule
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Admin notes collection
    match /notes/{noteId} {
      // Allow read access to all authenticated users
      allow read: if request.auth != null;
      
      // Allow creation by authenticated users
      allow create: if request.auth != null;
      
      // Allow update by owner but prevent modification of createdAt field
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        (
          // Either createdAt remains unchanged or isn't included in the update
          !request.resource.data.keys().hasAny(['createdAt']) || 
          request.resource.data.createdAt == resource.data.createdAt
        );
      
      // Allow deletion by owner
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // User data and subcollections
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Notes subcollection
      match /notes/{noteId} {
        // Allow reading by the owner
        allow read: if request.auth != null && request.auth.uid == userId;
        
        // Allow creation by the owner
        allow create: if request.auth != null && request.auth.uid == userId;
        
        // Allow update by owner but prevent modification of createdAt field
        allow update: if request.auth != null && 
          request.auth.uid == userId &&
          (
            // Either createdAt remains unchanged or isn't included in the update
            !request.resource.data.keys().hasAny(['createdAt']) || 
            request.resource.data.createdAt == resource.data.createdAt
          );
        
        // Allow deletion by owner
        allow delete: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}